/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;
import java.util.Arrays;
import java.util.ArrayList;

public class App {
    public List<String> readLines(String path) {
        List<String> allLines = new ArrayList<String>();
        // "/home/timon/Public/advent-of-code/2024/day_2/input.txt"
        try {
          allLines = Files.readAllLines(Paths.get(path));
        } catch (IOException e) {
          e.printStackTrace();
        }
        return allLines;
    }

    private boolean matchCriteria(int number, int prev){
       int highBorder = 3;
       int lowBorder = 1;
       int result = Math.abs(prev - number);
       return result <= highBorder && result >= lowBorder;
    }

    public boolean isIncrease(String line){
      String[] arr = line.split(" ");
      int currNumber = 0;
      for (String a : arr){
         int number = Integer.parseInt(a);
         if (number > currNumber && matchCriteria(number, currNumber)){
            currNumber = number;
         } else {
           return false;
         }
      }
      return true;
    }

    public boolean isDecrease(String line){
      String[] arr = line.split(" ");
      int currNumber =  Integer.parseInt(arr[0]) + 1;
      System.out.println(Arrays.toString(arr));
      for (String a : arr) {
        System.out.println(a);
        int num = Integer.parseInt(a);
        System.out.println(currNumber - num);
        if (currNumber > num && matchCriteria(num, currNumber)){
          currNumber = num;
        } else {
          System.out.println("Exit");
          System.out.println(num);
          System.out.println(currNumber);
          return false;
        }
      }
      return true;
    }

    public boolean isSafe(String line){
      if (this.isIncrease(line) || this.isDecrease(line)){
        return true;
      }
      return false;

    }



    public static void main(String[] args) {
    }
}
